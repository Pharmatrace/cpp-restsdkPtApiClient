/**
 * PharmaTrace Supply Chain Information Network API
 * The PharmaTrace SCIN API provides network members a resource and process oriented access to the blockchain backed market and inventory information. It represents a layer of abstraction above the Hyperledger network to facilitate a business focused development of clients and integration systems without the need to directly connect to Hyperledger nodes.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: api@pharmatrace.io
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.0.0-beta2.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ContainerApi.h
 *
 * 
 */

#ifndef IO_PHARMATRACE_API_SCIN_PUBLIC_API_ContainerApi_H_
#define IO_PHARMATRACE_API_SCIN_PUBLIC_API_ContainerApi_H_


#include "../ApiClient.h"

#include "Error.h"
#include "Locations.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace io {
namespace pharmatrace {
namespace api {
namespace scin {
namespace public {
namespace api {

using namespace io::pharmatrace::api::scin::public::model;



class  ContainerApi 
{
public:

    explicit ContainerApi( std::shared_ptr<ApiClient> apiClient );

    virtual ~ContainerApi();

    /// <summary>
    /// Location History
    /// </summary>
    /// <remarks>
    /// Returns the location history of a container or a individually labeled pharmaceutical
    /// </remarks>
    /// <param name="containerId">container id of the tracked container. (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="offset">Offset the list of returned results by this amount. Default is zero. (optional, default to 0)</param>
    /// <param name="limit">Number of items to retrieve. Default is 5, maximum is 100. (optional, default to 0)</param>
    pplx::task<std::shared_ptr<Locations>> locationHistoryGet(
        boost::optional<utility::string_t> containerId,
        boost::optional<int32_t> offset,
        boost::optional<int32_t> limit
    );

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}
}
}

#endif /* IO_PHARMATRACE_API_SCIN_PUBLIC_API_ContainerApi_H_ */

